/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import clases.ComboItem;
import clases.DAOPacientes;
import clases.DAOTrabajadores;
import clases.Estado;
import clases.Trabajadores;
import java.awt.Font;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Jose Luis Tinajero
 */
public class FrmTrabajadores extends javax.swing.JFrame {

    Estado es = new Estado();
    Font fntComponente = new Font("Tahoma", Font.BOLD, 14);

    /**
     * Creates new form FrmTrabajadores
     */
    public FrmTrabajadores() {
        initComponents();
        cargarEstado();
        cargaCmbArea();
        cargaCmbFiltrado();
        cargaCmbFiltradoEliminados();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtApPaterno = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApMaterno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNoInt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNoExt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmbEstado = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtUniversidad = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        dchFechaIni = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        dchFechaFin = new com.toedter.calendar.JDateChooser();
        jLabel23 = new javax.swing.JLabel();
        cmbTurno = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        chkDomingo = new javax.swing.JCheckBox();
        chkLunes = new javax.swing.JCheckBox();
        chkMartes = new javax.swing.JCheckBox();
        chkMiercoles = new javax.swing.JCheckBox();
        chkJueves = new javax.swing.JCheckBox();
        chkViernes = new javax.swing.JCheckBox();
        chkSabado = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        txtJornada = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cmbTipoTrabajador = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtHoras = new javax.swing.JTextField();
        Area = new javax.swing.JLabel();
        cmbClase = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaObservaciones = new javax.swing.JTextArea();
        txtMunicipio = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTrabajadores = new javax.swing.JTable();
        lblFiltro = new javax.swing.JLabel();
        txtFiltroPacientes = new javax.swing.JTextField();
        cmbEliminados = new javax.swing.JComboBox();
        lblFiltro1 = new javax.swing.JLabel();
        txtFiltroTrabajadores = new javax.swing.JTextField();
        cmbEliminadosTrabajadores = new javax.swing.JComboBox();
        btnActivarTra = new javax.swing.JButton();
        cmbFiltradoTrabajadores = new javax.swing.JComboBox();
        cmbArea = new javax.swing.JComboBox<>();
        btnAceptar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        chkPersonal = new javax.swing.JCheckBox();
        chkPasantes = new javax.swing.JCheckBox();
        txtHorario = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mitSituaciones = new javax.swing.JMenuItem();
        mitSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(198, 253, 188));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("REGISTRO TRABAJADORES");

        txtNombre.setName("txtNombre"); // NOI18N
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        jLabel2.setText("NOMBRE");

        txtApPaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApPaternoKeyReleased(evt);
            }
        });

        jLabel3.setText("APELLIDO PATERNO");

        txtApMaterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApMaternoKeyReleased(evt);
            }
        });

        jLabel4.setText("APELLIDO MATERNO");

        txtCalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCalleKeyReleased(evt);
            }
        });

        jLabel5.setText("CALLE");

        jLabel6.setText("NO. INT.");

        jLabel7.setText("NO. EXT.");

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("ESTADO");

        jLabel10.setText("TÉLEFONO");

        jLabel11.setText("E-MAIL");

        txtUniversidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUniversidadKeyReleased(evt);
            }
        });

        jLabel12.setText("UNIVERSIDAD");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fecha Inicio"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dchFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dchFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Fecha Finalización"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dchFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dchFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel23.setText("TURNO");

        cmbTurno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MATUTINO", "VESPERTINO", "NOCTURNO" }));
        cmbTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTurnoActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Horario"));

        chkDomingo.setText("Domingo");

        chkLunes.setText("Lunes");

        chkMartes.setText("Martes");

        chkMiercoles.setText("Miércoles");
        chkMiercoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMiercolesActionPerformed(evt);
            }
        });

        chkJueves.setText("Jueves");
        chkJueves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkJuevesActionPerformed(evt);
            }
        });

        chkViernes.setText("Viernes");

        chkSabado.setText("Sábado");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkDomingo)
                    .addComponent(chkLunes)
                    .addComponent(chkMartes)
                    .addComponent(chkMiercoles)
                    .addComponent(chkJueves)
                    .addComponent(chkViernes)
                    .addComponent(chkSabado))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkDomingo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkLunes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkMartes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkMiercoles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkJueves)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkViernes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkSabado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setText("JORNADA");

        jLabel13.setText("MATRICULA PASANTE");

        jLabel14.setText("TIPO TRABAJADOR");

        cmbTipoTrabajador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ENFERMERA/O", "PSICOLÓGA/O", "DOCTOR/A", "INTENDENCIA", "ADMINISTRATIVO" }));

        jLabel15.setText("ESPECIALIDAD");

        txtEspecialidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEspecialidadKeyReleased(evt);
            }
        });

        jLabel16.setText("HORAS REGISTRADAS");

        Area.setText("DEPARTAMENTO");

        cmbClase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PERSONAL", "PASANTE" }));
        cmbClase.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbClaseItemStateChanged(evt);
            }
        });

        jLabel18.setText("Personal/Pasante");

        jLabel19.setText("OBSERVACIONES");

        txaObservaciones.setColumns(20);
        txaObservaciones.setRows(5);
        txaObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txaObservacionesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txaObservaciones);

        txtMunicipio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMunicipioKeyReleased(evt);
            }
        });

        jLabel20.setText("MUNICIPIO");

        tblTrabajadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblTrabajadores);

        lblFiltro.setFont(fntComponente);
        lblFiltro.setText("Filtro: ");

        txtFiltroPacientes.setFont(fntComponente);
        txtFiltroPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroPacientesActionPerformed(evt);
            }
        });
        txtFiltroPacientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroPacientesKeyReleased(evt);
            }
        });

        cmbEliminados.setFont(fntComponente);
        cmbEliminados.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblFiltro1.setText("FILTRO:");

        txtFiltroTrabajadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroTrabajadoresActionPerformed(evt);
            }
        });
        txtFiltroTrabajadores.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFiltroTrabajadoresKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroTrabajadoresKeyReleased(evt);
            }
        });

        cmbEliminadosTrabajadores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnActivarTra.setText("ACTIVAR");
        btnActivarTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarTraActionPerformed(evt);
            }
        });

        cmbFiltradoTrabajadores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbFiltradoTrabajadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFiltradoTrabajadoresActionPerformed(evt);
            }
        });

        cmbArea.setFont(fntComponente);
        cmbArea.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAreaActionPerformed(evt);
            }
        });

        btnAceptar.setText("AGREGAR");
        btnAceptar.setToolTipText("");
        btnAceptar.setMaximumSize(new java.awt.Dimension(71, 40));
        btnAceptar.setMinimumSize(new java.awt.Dimension(71, 40));
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnListar.setText("LISTAR");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        chkPersonal.setText("PERSONAL");

        chkPasantes.setText("PASANTES");

        txtHorario.setEditable(false);
        txtHorario.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtApPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbClase, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtCalle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNoInt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6)))
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNoExt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel20)
                                            .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(336, 336, 336)
                                        .addComponent(txtApMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Area)
                                            .addComponent(cmbArea, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16))
                                        .addGap(27, 27, 27)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel9)
                                                .addComponent(txtJornada)
                                                .addComponent(jLabel13)
                                                .addComponent(txtMatricula)
                                                .addComponent(jLabel14)
                                                .addComponent(cmbTipoTrabajador, 0, 157, Short.MAX_VALUE)
                                                .addComponent(jLabel23)
                                                .addComponent(cmbTurno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtTelefono))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(48, 48, 48)
                                                .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(13, 13, 13)
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtUniversidad, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15))))
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnListar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chkPersonal)
                                        .addGap(18, 18, 18)
                                        .addComponent(chkPasantes)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFiltro1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltroTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbFiltradoTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(38, 38, 38)
                        .addComponent(cmbEliminadosTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnActivarTra)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFiltro1)
                            .addComponent(txtFiltroTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFiltradoTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEliminadosTrabajadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnActivarTra)
                            .addComponent(btnBuscar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNoExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbClase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Area)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(183, 183, 183)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtJornada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbTipoTrabajador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtUniversidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnListar)
                            .addComponent(chkPersonal)
                            .addComponent(chkPasantes))))
                .addGap(21, 21, 21))
        );

        jMenu1.setText("Menú Principal");

        mitSituaciones.setText("Situaciones");
        mitSituaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitSituacionesActionPerformed(evt);
            }
        });
        jMenu1.add(mitSituaciones);

        mitSalir.setText("Salir");
        mitSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitSalirActionPerformed(evt);
            }
        });
        jMenu1.add(mitSalir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarEstado() {
        cmbEstado.removeAllItems();
        for (int i = 0; i < es.Listar().length; i++) {
            cmbEstado.addItem(es.Listar()[i][2]);
        }
    }

    private void cargaCmbArea() {
        cmbArea.removeAllItems();
        cmbArea.addItem("SAN JOSÉ");
        cmbArea.addItem("CESARITA");
        cmbArea.addItem("NAZARET");
        cmbArea.addItem("CORAZÓN DE JESÚS");
        cmbArea.addItem("SAGRADA FAMILIA");
        cmbArea.addItem("VILASECA");
    }

    public void cargaCmbFiltrado() {
        DAOTrabajadores dt = new DAOTrabajadores();
        cmbFiltradoTrabajadores.removeAllItems();
        ArrayList<ComboItem> pacientes = dt.filtrarTrabajadores(txtFiltroTrabajadores.getText());
        for (int i = 0; i < pacientes.size(); i++) {
            cmbFiltradoTrabajadores.addItem((ComboItem) pacientes.get(i));
        }
    }

    public void cargaCmbFiltradoEliminados() {
        DAOTrabajadores dt = new DAOTrabajadores();
        cmbEliminadosTrabajadores.removeAllItems();
        ArrayList<ComboItem> pacientes = dt.filtrarTrabajadoresEliminados(txtFiltroTrabajadores.getText());
        for (int i = 0; i < pacientes.size(); i++) {
            cmbEliminadosTrabajadores.addItem((ComboItem) pacientes.get(i));
        }
    }
   

    private void LimpiarCampos() {

        txtNombre.setText("");
        txtApPaterno.setText("");
        txtApMaterno.setText("");
        txtCalle.setText("");
        txtNoInt.setText("");
        txtNoExt.setText("");
        txtMunicipio.setText("");
        txtTelefono.setText("");
        txtCorreo.setText("");
        txtUniversidad.setText("");
        txtJornada.setText("");
        txtMatricula.setText("");
        txtHoras.setText("");
        txtEspecialidad.setText("");
        txaObservaciones.setText("");
        dchFechaIni.setCalendar(null);
        dchFechaFin.setCalendar(null);

    }

    public void llenaCamposDAOTRA(DAOTrabajadores dTra) throws ParseException {
        txtNombre.setText(dTra.getNombreTrabajador());
        txtApPaterno.setText(dTra.getApPatTrabajador());
        txtApMaterno.setText(dTra.getApMatTrabajador());
        txtCalle.setText(dTra.getCalleTrabajador());
        txtNoInt.setText(dTra.getNoIntTrabajador());
        txtNoExt.setText(dTra.getNoExtTrabajador());
        txtMunicipio.setText(dTra.getMunicipioTrabajador());
        txtTelefono.setText(dTra.getTelefonoTrabajador());
        txtCorreo.setText(dTra.getCorreoTrabajador());
        txtHorario.setText(dTra.getHorarioAsignadoPasante());
        txtUniversidad.setText(dTra.getUniversidadProcedencia());
        txtJornada.setText(dTra.getJornadaTrabajador());
        txtMatricula.setText("" + dTra.getMatriculaPasante());
        txtHoras.setText("" + dTra.getHorasRegistradas());
        txtEspecialidad.setText(dTra.getEspecialidad());
        txaObservaciones.setText(dTra.getObservaciones());

        DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
        String str_dateIni = dTra.getFechaInicio();
        String str_dateFin = dTra.getFechaTermino();

        DateFormat formatter;
        Date dateIni, dateFin;
        dateIni = (Date) fmt.parse(str_dateIni);
        dateFin = (Date) fmt.parse(str_dateFin);

        dchFechaIni.setDate(dateIni);
        dchFechaFin.setDate(dateFin);
        cmbEstado.setSelectedItem(dTra.getEstadoTrabajador());
        cmbArea.setSelectedItem(dTra.getAreaAsignada());
        cmbTurno.setSelectedItem(dTra.getTurnoTrabajador());
        cmbTipoTrabajador.setSelectedItem(dTra.getTipoTrabajador());
        
        if (dTra.getClaseTrabajador() == 'E') {
            cmbClase.setSelectedItem("PERSONAL");
        } else {
            cmbClase.setSelectedItem("PASANTE");
        }

    }
    
    /**
     * Funcion que se encarga de validar si algún checkBox esta seleccionado 
     * y de no ser así regresa falso
     * 
     * @return
     * regresa true si algún checkBox esta seleccionado y false si ninguno lo esta
     */
    private boolean HorarioSeleccionado() {
        boolean bandera = true;
        if (!chkDomingo.isSelected()) {
            if (!chkLunes.isSelected()) {
                if (!chkMartes.isSelected()) {
                    if (!chkMiercoles.isSelected()) {
                        if (!chkJueves.isSelected()) {
                            if (!chkViernes.isSelected()) {
                                if (!chkSabado.isSelected()) {
                                    bandera = false;
                                }
                            }
                        }
                    }
                }
            }
        }
        return bandera;
    }
    
    /**
     * Funcion que sirve para verificar que checkBox estan marcados para poder
     * agregar su respectivo prefijo al string.
     * 
     * @return 
     * Regresa un string con todos los prefijos que se seleccionaron
     */
    private String Horario(){
        String horario = "";
        if (chkDomingo.isSelected())
            horario += "Dom/";
        if (chkLunes.isSelected()) 
            horario += "Lun/";
        if (chkMartes.isSelected()) 
            horario += "Mar/";
        if (chkMiercoles.isSelected()) 
            horario += "Mir/";
        if (chkJueves.isSelected()) 
            horario += "Jue/";
        if (chkViernes.isSelected()) 
            horario += "Vie/";
        if (chkSabado.isSelected())
            horario += "Sab/";
        return horario;
    }
    
    private void txtFiltroPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroPacientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroPacientesActionPerformed

    private void txtFiltroPacientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroPacientesKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtFiltroPacientesKeyReleased

    private void txtFiltroTrabajadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroTrabajadoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroTrabajadoresActionPerformed

    private void txtFiltroTrabajadoresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroTrabajadoresKeyReleased
        // TODO add your handling code here:
        txtFiltroTrabajadores.setText(txtFiltroTrabajadores.getText().toUpperCase());
        cargaCmbFiltrado();
        cargaCmbFiltradoEliminados();
    }//GEN-LAST:event_txtFiltroTrabajadoresKeyReleased

    private void btnActivarTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarTraActionPerformed
        int si = JOptionPane.showConfirmDialog(this, "¿Desea volver a activar al trabajador?");
        if (JOptionPane.YES_OPTION == si) {
            ComboItem ci = (ComboItem) cmbEliminadosTrabajadores.getSelectedItem();
            Trabajadores tra = new Trabajadores();
            DAOTrabajadores dTra = new DAOTrabajadores();
            dTra.setIdTrabajador(ci.getId());
            if (dTra.activar()) {
                JOptionPane.showMessageDialog(rootPane, "Registro activado");
                cargaCmbFiltrado();
                btnListar.doClick();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se activo trabajador");
            }

        }
    }//GEN-LAST:event_btnActivarTraActionPerformed

    private void cmbFiltradoTrabajadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFiltradoTrabajadoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbFiltradoTrabajadoresActionPerformed

    private void cmbAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAreaActionPerformed

    private void mitSituacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitSituacionesActionPerformed
        dispose();
        FrmSituaciones frm = new FrmSituaciones();
        frm.setVisible(true);
    }//GEN-LAST:event_mitSituacionesActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        
        if (!txtNombre.getText().isEmpty()) {
            if (!txtApPaterno.getText().isEmpty()) {
                if (!txtApMaterno.getText().isEmpty()) {
                    if (!txtCalle.getText().isEmpty()) {
                            if (!txtNoExt.getText().isEmpty()) {
                                if (!txtMunicipio.getText().isEmpty()) {
                                        if (!txtTelefono.getText().isEmpty()) {
                                                        if (HorarioSeleccionado()) {
                                                            if (!txtJornada.getText().isEmpty()) {

                                                                                Trabajadores tra = new Trabajadores();
                                                                                DAOTrabajadores dTra = new DAOTrabajadores();
                                                                                tra.setNombreTrabajador(txtNombre.getText());
                                                                                tra.setApPatTrabajador(txtApPaterno.getText());
                                                                                tra.setApMatTrabajador(txtApMaterno.getText());
                                                                                tra.setCalleTrabajador(txtCalle.getText());
                                                                                tra.setNoIntTrabajador(txtNoInt.getText());
                                                                                tra.setNoExtTrabajador(txtNoExt.getText());
                                                                                tra.setEstadoTrabajador(cmbEstado.getSelectedItem().toString());
                                                                                tra.setMunicipioTrabajador(txtMunicipio.getText());
                                                                                tra.setCorreoTrabajador(txtCorreo.getText());
                                                 
                                                                                
                                                                                if ((cmbClase.getSelectedItem().toString()).equals("PERSONAL")) {
                                                                                    tra.setClaseTrabajador('E');
                                                                                    tra.setFechaInicio(null);
                                                                                    tra.setFechaTermino(null);
                                                                                    tra.setMatriculaPasante(0);
                                                                                    tra.setHorasRegistradas(0);
                                                                                    tra.setUniversidadProcedencia("-");
                                                                                } else {
                                                                                    DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
                                                                                    String fechaIni = fmt.format(dchFechaIni.getDate());
                                                                                    String fechaFin = fmt.format(dchFechaFin.getDate());
                                                                                    tra.setMatriculaPasante(Integer.parseInt(txtMatricula.getText()));
                                                                                    tra.setFechaInicio(fechaIni);
                                                                                    tra.setFechaTermino(fechaFin);
                                                                                    tra.setHorasRegistradas(Integer.parseInt(txtHoras.getText()));
                                                                                    tra.setUniversidadProcedencia(txtUniversidad.getText());
                                                                                    tra.setClaseTrabajador('U');
                                                                                }
                                                                                tra.setTelefonoTrabajador(txtTelefono.getText());
                                                                                tra.setTurnoTrabajador(cmbTurno.getSelectedItem().toString());
                                                                                tra.setHorarioAsignadoPasante(Horario());
                                                                                tra.setJornadaTrabajador(txtJornada.getText());
                                                                                tra.setAreaAsignada(cmbArea.getSelectedItem().toString());
                                                                                tra.setTipoTrabajador(cmbTipoTrabajador.getSelectedItem().toString());
                                                                                
                                                                                tra.setEspecialidad(txtEspecialidad.getText());
                                                                                tra.setObservaciones(txaObservaciones.getText());
                                                                                dTra.setTrabajador(tra);
                                                                                if (dTra.agregar()) {
                                                                                    JOptionPane.showMessageDialog(rootPane, "Registro guardado");
                                                                                    LimpiarCampos();
                                                                                    cargaCmbFiltrado();
                                                                                    btnListar.doClick();
                                                                                } else {
                                                                                    JOptionPane.showMessageDialog(rootPane, "No se inserto");
                                                                                }
                                                            } else {
                                                                JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Jornada' esta vacío");
                                                            }
                                                        } else {
                                                            JOptionPane.showMessageDialog(this, "ERROR: Debe de haber al menos un campo seleccionado en 'Horario'");
                                                        }
                                        } else {
                                            JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Telefono' esta vacío");
                                        }
                                    
                                } else {
                                    JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Municipio' esta vacío");
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "ERROR: El campo de 'No. Exterior' esta vacío");
                            }
                    } else {
                        JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Calle' esta vacío");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Apellido Materno' esta vacío");
                }
            } else {
                JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Apellido Paterno' esta vacío");
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Nombre' esta vacío");
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here:
        DAOTrabajadores dTra = new DAOTrabajadores();
        if (chkPersonal.isSelected()) {
            tblTrabajadores.setModel(dTra.listarPersonal());
        } else if (chkPasantes.isSelected()) {
            tblTrabajadores.setModel(dTra.listarPasantes());
        } else {
            tblTrabajadores.setModel(dTra.listar());
        }
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        //ComboItem ci = (ComboItem) cmbFiltradoPacientes.getSelectedItem();
        int si = JOptionPane.showConfirmDialog(this, "¿Desea eliminar el registro del  trabajador?");
        if (JOptionPane.YES_OPTION == si) {
            DAOTrabajadores dTra = new DAOTrabajadores();
            ComboItem ci = (ComboItem) cmbFiltradoTrabajadores.getSelectedItem();
            dTra.setIdTrabajador(ci.getId());
            if (dTra.del_trabajador()) {
                JOptionPane.showMessageDialog(rootPane, "Registro eliminado");
                LimpiarCampos();
                btnListar.doClick();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se elimino");
            }
            LimpiarCampos();
            btnListar.doClick();
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
      
        if (!txtNombre.getText().isEmpty()) {
            if (!txtApPaterno.getText().isEmpty()) {
                if (!txtApMaterno.getText().isEmpty()) {
                    if (!txtCalle.getText().isEmpty()) {
                            if (!txtNoExt.getText().isEmpty()) {
                                if (!txtMunicipio.getText().isEmpty()) {
                                        if (!txtTelefono.getText().isEmpty()) {
                                                        if (HorarioSeleccionado()) {
                                                            if (!txtJornada.getText().isEmpty()) {
                                                                                Trabajadores tra = new Trabajadores();
                                                                                DAOTrabajadores dTra = new DAOTrabajadores();
                                                                                ComboItem ci = (ComboItem) cmbFiltradoTrabajadores.getSelectedItem();
                                                                                tra.setIdTrabajador(ci.getId());
                                                                                tra.setNombreTrabajador(txtNombre.getText());
                                                                                tra.setApPatTrabajador(txtApPaterno.getText());
                                                                                tra.setApMatTrabajador(txtApMaterno.getText());
                                                                                tra.setCalleTrabajador(txtCalle.getText());
                                                                                tra.setNoIntTrabajador(txtNoInt.getText());
                                                                                tra.setNoExtTrabajador(txtNoExt.getText());
                                                                                tra.setEstadoTrabajador(cmbEstado.getSelectedItem().toString());
                                                                                tra.setMunicipioTrabajador(txtMunicipio.getText());
                                                                                tra.setCorreoTrabajador(txtCorreo.getText());
                                                                                tra.setTelefonoTrabajador(txtTelefono.getText());
                                                                                
                                                                                if ((cmbClase.getSelectedItem().toString()).equals("PERSONAL")) {
                                                                                    tra.setClaseTrabajador('E');
                                                                                    tra.setFechaInicio("");
                                                                                    tra.setFechaTermino("");
                                                                                    tra.setMatriculaPasante(0);
                                                                                    tra.setHorasRegistradas(0);
                                                                                    tra.setUniversidadProcedencia("");
                                                                                } else {
                                                                                    DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
                                                                                    String fechaIni = fmt.format(dchFechaIni.getDate());
                                                                                    String fechaFin = fmt.format(dchFechaFin.getDate());
                                                                                    tra.setFechaInicio(fechaIni);
                                                                                    tra.setFechaTermino(fechaFin);
                                                                                    tra.setMatriculaPasante(Integer.parseInt(txtMatricula.getText()));
                                                                                    tra.setHorasRegistradas(Integer.parseInt(txtHoras.getText()));
                                                                                    tra.setUniversidadProcedencia(txtUniversidad.getText());
                                                                                    tra.setClaseTrabajador('U');
                                                                                }
                                                                                tra.setTelefonoTrabajador(txtTelefono.getText());
                                                                                tra.setTurnoTrabajador(cmbTurno.getSelectedItem().toString());
                                                                                tra.setHorarioAsignadoPasante(Horario());
                                                                                tra.setJornadaTrabajador(txtJornada.getText());
                                                                                tra.setAreaAsignada(cmbArea.getSelectedItem().toString());
                                                                                tra.setTipoTrabajador(cmbTipoTrabajador.getSelectedItem().toString());
                                                                                
                                                                                tra.setEspecialidad(txtEspecialidad.getText());
                                                                                tra.setObservaciones(txaObservaciones.getText());
                                                                                dTra.setTrabajador(tra);
                                                                                if (dTra.modificar()) {
                                                                                    JOptionPane.showMessageDialog(rootPane, "Registro trabajador modificado");
                                                                                    LimpiarCampos();
                                                                                    cargaCmbFiltrado();
                                                                                    btnListar.doClick();
                                                                                } else {
                                                                                    JOptionPane.showMessageDialog(rootPane, "No se modifico");
                                                                                }
                                                            } else {
                                                                JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Jornada' esta vacío");
                                                            }
                                                        } else {
                                                            JOptionPane.showMessageDialog(this, "ERROR: Debe de haber al menos un campo seleccionado en 'Horario'");
                                                        } 
                                        } else {
                                            JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Telefono' esta vacío");
                                        }
                                } else {
                                    JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Municipio' esta vacío");
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "ERROR: El campo de 'No. Exterior' esta vacío");
                            }
                    } else {
                        JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Calle' esta vacío");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Apellido Materno' esta vacío");
                }
            } else {
                JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Apellido Paterno' esta vacío");
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR: El campo de 'Nombre' esta vacío");
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        ComboItem ci = (ComboItem) cmbFiltradoTrabajadores.getSelectedItem();
        DAOTrabajadores dTra = new DAOTrabajadores();
        System.out.println(ci.getId());
        dTra.setIdTrabajador(ci.getId());
        dTra.buscar();
        try {
            llenaCamposDAOTRA(dTra);
        } catch (ParseException ex) {
            Logger.getLogger(FrmTrabajadores.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void chkJuevesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkJuevesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkJuevesActionPerformed

    private void chkMiercolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMiercolesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkMiercolesActionPerformed

    private void txtFiltroTrabajadoresKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroTrabajadoresKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroTrabajadoresKeyPressed

    private void mitSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitSalirActionPerformed
        dispose();
    }//GEN-LAST:event_mitSalirActionPerformed

    private void cmbClaseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbClaseItemStateChanged
        if (cmbClase.getSelectedItem().toString().equals("PASANTE")) {
            dchFechaIni.setEnabled(true);
            dchFechaFin.setEnabled(true);
            txtHoras.setEnabled(true);
            txtUniversidad.setEnabled(true);
            txtMatricula.setEnabled(true);
        } else {
            dchFechaIni.setEnabled(false);
            dchFechaFin.setEnabled(false);
            txtHoras.setEnabled(false);
            txtUniversidad.setEnabled(false);
            txtMatricula.setEnabled(false);
        }
    }//GEN-LAST:event_cmbClaseItemStateChanged

    private void cmbTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTurnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTurnoActionPerformed

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        txtNombre.setText(txtNombre.getText().toUpperCase());
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtApPaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApPaternoKeyReleased
        txtApPaterno.setText(txtApPaterno.getText().toUpperCase());
    }//GEN-LAST:event_txtApPaternoKeyReleased

    private void txtApMaternoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApMaternoKeyReleased
        txtApMaterno.setText(txtApMaterno.getText().toUpperCase());
    }//GEN-LAST:event_txtApMaternoKeyReleased

    private void txtCalleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCalleKeyReleased
        txtCalle.setText(txtCalle.getText().toUpperCase());
    }//GEN-LAST:event_txtCalleKeyReleased

    private void txtMunicipioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMunicipioKeyReleased
        txtMunicipio.setText(txtMunicipio.getText().toUpperCase());
    }//GEN-LAST:event_txtMunicipioKeyReleased

    private void txtUniversidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUniversidadKeyReleased
        txtUniversidad.setText(txtUniversidad.getText().toUpperCase());
    }//GEN-LAST:event_txtUniversidadKeyReleased

    private void txtEspecialidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEspecialidadKeyReleased
        txtEspecialidad.setText(txtEspecialidad.getText().toUpperCase());
    }//GEN-LAST:event_txtEspecialidadKeyReleased

    private void txaObservacionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaObservacionesKeyReleased
        txaObservaciones.setText(txaObservaciones.getText().toUpperCase());
    }//GEN-LAST:event_txaObservacionesKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmTrabajadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmTrabajadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmTrabajadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmTrabajadores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmTrabajadores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Area;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnActivarTra;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JCheckBox chkDomingo;
    private javax.swing.JCheckBox chkJueves;
    private javax.swing.JCheckBox chkLunes;
    private javax.swing.JCheckBox chkMartes;
    private javax.swing.JCheckBox chkMiercoles;
    private javax.swing.JCheckBox chkPasantes;
    private javax.swing.JCheckBox chkPersonal;
    private javax.swing.JCheckBox chkSabado;
    private javax.swing.JCheckBox chkViernes;
    private javax.swing.JComboBox<String> cmbArea;
    private javax.swing.JComboBox<String> cmbClase;
    private javax.swing.JComboBox cmbEliminados;
    private javax.swing.JComboBox cmbEliminadosTrabajadores;
    private javax.swing.JComboBox<String> cmbEstado;
    private javax.swing.JComboBox cmbFiltradoTrabajadores;
    private javax.swing.JComboBox<String> cmbTipoTrabajador;
    private javax.swing.JComboBox<String> cmbTurno;
    public com.toedter.calendar.JDateChooser dchFechaFin;
    public com.toedter.calendar.JDateChooser dchFechaIni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblFiltro1;
    private javax.swing.JMenuItem mitSalir;
    private javax.swing.JMenuItem mitSituaciones;
    private javax.swing.JTable tblTrabajadores;
    private javax.swing.JTextArea txaObservaciones;
    private javax.swing.JTextField txtApMaterno;
    private javax.swing.JTextField txtApPaterno;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtEspecialidad;
    private javax.swing.JTextField txtFiltroPacientes;
    private javax.swing.JTextField txtFiltroTrabajadores;
    private javax.swing.JTextField txtHorario;
    private javax.swing.JTextField txtHoras;
    private javax.swing.JTextField txtJornada;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtMunicipio;
    private javax.swing.JTextField txtNoExt;
    private javax.swing.JTextField txtNoInt;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtUniversidad;
    // End of variables declaration//GEN-END:variables
}
