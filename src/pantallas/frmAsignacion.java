/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import clases.Conex;
import clases.DaoAsignacion;
import clases.DaoProducto;
import java.awt.Font;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sonny
 */
public class frmAsignacion extends javax.swing.JFrame {

    private void skin() {
        Font textTitulo = new Font("Tahoma", Font.BOLD, 24);
        Font textComponente = new Font("Tahoma", Font.BOLD, 14);
        lblCantidad.setFont(textComponente);
        lblPaciente.setFont(textComponente);
        lblDosis.setFont(textComponente);
        lblSalida.setFont(textTitulo);
        txtCantidadCajas.setFont(textComponente);
        cmbPaciente.setFont(textComponente);
        cmbProducto.setFont(textComponente);
        btnSalir.setFont(textComponente);
        btnAnyadir.setFont(textComponente);
        btnAceptar.setFont(textComponente);
    }

    /**
     * Creates new form frmSalida
     */
    public frmAsignacion() {
        initComponents();
        CargacomboPaciente();
        CargacomboProducto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        lblSalida = new javax.swing.JLabel();
        cmbPaciente = new javax.swing.JComboBox();
        lblPaciente = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        lblDosis = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        cmbProducto = new javax.swing.JComboBox();
        txtCantidadCajas = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSalida = new javax.swing.JTable();
        btnAceptar = new javax.swing.JButton();
        btnAnyadir = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();
        lblProducto = new javax.swing.JLabel();
        chkNoche = new javax.swing.JCheckBox();
        chkManana = new javax.swing.JCheckBox();
        chkTarde = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSalida.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSalida.setText("SALIDA");
        getContentPane().add(lblSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 22, -1, -1));

        getContentPane().add(cmbPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 50, 180, -1));

        lblPaciente.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPaciente.setText("PACIENTE");
        getContentPane().add(lblPaciente, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 50, -1, -1));

        btnSalir.setText("SALIR");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 500, -1, 40));

        lblDosis.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDosis.setText("DOSIS");
        getContentPane().add(lblDosis, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        lblCantidad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCantidad.setText("CANTIDAD CAJAS");
        getContentPane().add(lblCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        getContentPane().add(cmbProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 76, 180, -1));
        getContentPane().add(txtCantidadCajas, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 90, -1));

        tblSalida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idProducto", "Producto", "Cantidad", "Dosis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSalida);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 375, 275));

        btnAceptar.setText("ACEPTAR");
        btnAceptar.setEnabled(false);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 500, -1, 40));

        btnAnyadir.setText("AÑADIR");
        btnAnyadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnyadirActionPerformed(evt);
            }
        });
        getContentPane().add(btnAnyadir, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, -1, 40));

        btnQuitar.setText("QUITAR");
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });
        getContentPane().add(btnQuitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 160, -1, 40));

        lblProducto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblProducto.setText("PRODUCTO");
        getContentPane().add(lblProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 76, -1, -1));

        chkNoche.setText("NOCHE");
        getContentPane().add(chkNoche, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, -1, -1));

        chkManana.setText("MAÑANA");
        getContentPane().add(chkManana, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        chkTarde.setText("TARDE");
        getContentPane().add(chkTarde, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/FondoVerde.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       this.setVisible(false);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnAnyadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnyadirActionPerformed
        String dosis = "";
        int idProd = 0;
        int cant,stockActualProducto;
        String cant1;
        String prod = cmbProducto.getSelectedItem().toString();
            cmbPaciente.setEnabled(false);
            btnAceptar.setEnabled(true);
            cant1=txtCantidadCajas.getText();
        if(isNumeric(cant1)){
            cant = Integer.parseInt(cant1);
            Connection con = Conex.getInstance().getConnection();
                String sql = "{call sp_prod_lis(?)}";
                try {
                    CallableStatement stm = con.prepareCall(sql);
                    stm.setString(1, prod);
                    ResultSet rs = stm.executeQuery();
                    if (rs.next()) {
                        stockActualProducto = rs.getInt("stockActual");
                        if(stockActualProducto>cant){
                            if(chkManana.isSelected()){
                                dosis +="1";
                            }else{
                                dosis +="0";
                            }
                            if(chkTarde.isSelected()){
                                dosis +="1";
                            }else{
                                dosis +="0";

                            }
                            if(chkNoche.isSelected()){
                                dosis +="1";
                            }else{
                                dosis +="0";
                            }
                            idProd = rs.getInt("idProducto");
                            Object[] fila = {idProd, prod, cant,dosis};
                            DefaultTableModel modelo = (DefaultTableModel) tblSalida.getModel();
                            modelo.addRow(fila);   
                        }
                    }else{
                        JOptionPane.showMessageDialog(rootPane, "La cantidad ingresada supera el stock actual");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Ingrese un número");
            txtCantidadCajas.setText("");
            txtCantidadCajas.requestFocus(true);
        }
    }//GEN-LAST:event_btnAnyadirActionPerformed

public static boolean isNumeric(String str){
  return str.matches("-?\\d+(\\.\\d+)?");  //match a number with optional '-' and decimal.
}

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        DaoAsignacion da = new DaoAsignacion();
        int idPac = 0;
        DaoProducto dProductos[];
        boolean superaStock = false;
        String mensajeSuperaStock ="La operacion no pudo realizarse por los siguientes motivos:\n";
        int cantidadesProductos[];// = new DaoProducto();
        String pac = cmbPaciente.getSelectedItem().toString();
        Connection con = Conex.getInstance().getConnection();
            String sql = "{call sp_pac_nom(?)}";
            try {
                CallableStatement stm = con.prepareCall(sql);
                stm.setString(1, pac);
                ResultSet rs = stm.executeQuery();
            if (rs.next()) {
                idPac = rs.getInt("idPaciente");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
        da.setIdPaciente(idPac);
        
       if (da.agregar() == true) {
            DefaultTableModel dtm = (DefaultTableModel) tblSalida.getModel();
            int fila = dtm.getRowCount();
            cantidadesProductos = new int[fila];
            dProductos = new DaoProducto[fila];
            for (int i = 0; i < fila; i++) {
                cantidadesProductos[i]=(int)dtm.getValueAt(i, 2);
                dProductos[i] = new DaoProducto();
                //dProductos[i].setIdProducto((int)dtm.getValueAt(i, 0));
                dProductos[i].buscarPorId((int)dtm.getValueAt(i, 0));
                if((dProductos[i].getStockActual()- cantidadesProductos[i]) <= dProductos[i].getStockMinimo()){
                    superaStock = true;
                    mensajeSuperaStock += "" + dProductos[i].getNombreProductoPat() + " cuenta con un stock de "
                            + dProductos[i].getStockActual() + ", la operación cae bajo el stock minimo\n";
                }
            }
            if(superaStock){
               JOptionPane.showMessageDialog(rootPane, mensajeSuperaStock);
            }
            else{

                for (int i = 0; i < fila; i++) {
                   da.setIdProducto((int)dtm.getValueAt(i, 0));
                   da.setCantidad((int)dtm.getValueAt(i, 2));
                   da.setDosis((String) dtm.getValueAt(i, 3));
                   da.detalle();
                }
                dtm.setRowCount(0);
                JOptionPane.showMessageDialog(rootPane, "Asignacion terminada");
                cmbPaciente.setEnabled(true);
                btnAceptar.setEnabled(false);
            }
            
/*          
*/
            
       }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        // TODO add your handling code here:
        
        if(tblSalida.getSelectedRow()!= -1){
            
            DefaultTableModel modelo = (DefaultTableModel) tblSalida.getModel();
            modelo.removeRow(tblSalida.getSelectedRow());   
        }
        else{
            JOptionPane.showMessageDialog(rootPane,"Seleccione una columna de la tabla");
        }
    }//GEN-LAST:event_btnQuitarActionPerformed

    private void CargacomboPaciente() {
        Connection con = Conex.getInstance().getConnection();
            String sql = "{call sp_pac_tnom ()}";
            try {
                CallableStatement stm = con.prepareCall(sql);
                ResultSet rs = stm.executeQuery();
            cmbPaciente.removeAllItems();
            while (rs.next()) {
                cmbPaciente.addItem(rs.getString("Nom_Completo"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void CargacomboProducto() {
        Connection con = Conex.getInstance().getConnection();
               String sql = "{call sp_prod_sel ()}";
            try {
                CallableStatement stm = con.prepareCall(sql);
                ResultSet rs = stm.executeQuery();
            while (rs.next()) {
                cmbProducto.addItem(rs.getString("nombreProductoPat"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmProducto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAsignacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAsignacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAsignacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAsignacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAsignacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAnyadir;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBox chkManana;
    private javax.swing.JCheckBox chkNoche;
    private javax.swing.JCheckBox chkTarde;
    private javax.swing.JComboBox cmbPaciente;
    private javax.swing.JComboBox cmbProducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblDosis;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblProducto;
    private javax.swing.JLabel lblSalida;
    private javax.swing.JTable tblSalida;
    private javax.swing.JTextField txtCantidadCajas;
    // End of variables declaration//GEN-END:variables
}
